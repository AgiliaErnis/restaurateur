{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nconst MobileNavbar = () => {\n  _s();\n\n  const [click, setClick] = useState(false);\n  const [button, setButton] = useState(true);\n\n  const handleClick = () => setClick(!click);\n\n  const closeMobileMenu = () => setClick(false);\n\n  const showButton = () => {\n    if (window.innerWidth <= 1120) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    showButton();\n  }, []);\n  return {\n    showButton,\n    handleClick,\n    closeMobileMenu,\n    useEffect\n  };\n};\n\n_s(MobileNavbar, \"EqlzfYvNuhCpyFO/Zqcs1qcdUu4=\");\n\n_c = MobileNavbar;\nexport default MobileNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileNavbar\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/restaurateur/frontend/src/components/navbar/MobileNavbar.js"],"names":["useState","MobileNavbar","click","setClick","button","setButton","handleClick","closeMobileMenu","showButton","window","innerWidth","useEffect"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMM,WAAW,GAAG,MAAMH,QAAQ,CAAC,CAACD,KAAF,CAAlC;;AACA,QAAMK,eAAe,GAAG,MAAMJ,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACvB,QAAIC,MAAM,CAACC,UAAP,IAAqB,IAAzB,EAA+B;AAC7BL,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAFD,MAEO;AACLA,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GAND;;AAQAM,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAKA,SAAM;AAACA,IAAAA,UAAD;AAAYF,IAAAA,WAAZ;AAAwBC,IAAAA,eAAxB;AAAwCI,IAAAA;AAAxC,GAAN;AAED,CAtBD;;GAAMV,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import { useState } from 'react'\r\n\r\nconst MobileNavbar = () => {\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 1120) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n\r\n  return{showButton,handleClick,closeMobileMenu,useEffect}\r\n\r\n}\r\n\r\nexport default MobileNavbar;\r\n"]},"metadata":{},"sourceType":"module"}